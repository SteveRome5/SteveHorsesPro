{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular;}
{\colortbl;\red255\green255\blue255;\red4\green38\blue83;}
{\*\expandedcolortbl;;\cssrgb\c423\c20762\c39948;}
\margl1440\margr1440\vieww22240\viewh13040\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\fs28 \cf2  I have been working for months on this program. Essentially, it's a horse handicapping program, and in its simplest form, my idea was to have basically two functioning parts, Train and Pro. Pro is the first script, Train is the second script. So essentially, what I envisioned was Train would be kind of the brain doing all of the heavy lifting, building a huge database, harvesting data so that it could analyze the data and learn from it, and essentially feed Pro in real time in order to make more informed decisions at post-time. Train was supposed to do a multitude of things, including building a horse database so we could include that in the horse handicapping decisions. Pro, on the other hand, was meant to be a nimble, fast tool, but very powerful and robust. In theory, the whole premise of the program was for Pro to create a betting line or a win probability for every horse in every race, and then when live data or actual money, live odds started pouring in, it would tell me whether or not to make a bet on a particular horse if the price was favorable and the win percentage was high enough. Pro, again, was designed to be powerful and robust. It is supposed to have 35 plus handicapping tools, plus a logic, and then use all of the data and signals from Train in order to make fast decisions. The first problem I'm having is when I double-click on Pro, it is extremely slow. That is a relatively new development as I have been running it for months, and I've been able to get an HTML report as I have been running it for months, and I've been able to get an HTML report rather quickly. My biggest and most pressing matter right now is to make sure everything is plumbed properly, wire to wire. I want to make sure that Train is doing its exact job harvesting and training and learning with a robust and full database, and then I want to make sure that Train is feeding Pro and Pro is doing all of the things it was designed to do in order to, and I think most importantly, give us the best win probabilities possible per horse per race. When the live stuff automatically feeds in, the rest is simple. It's just whether or not it meets certain thresholds. So what I'm really asking for is to make sure that it is fully operable as intended and is working as it was designed. Need to ensure both are fully functioning and have correct commands for their launch buttons on the desktop. \
If and when we are 1000% certain that they are set up and working properly I would like to go back in and add any enhancements that you think would better or make the program smarter or more powerful to either TRAIN or PRO or both. THE ENTIRE premise of the program is that my win % number is better or sharper than the market. So, anything that will help increase win %, that we can gather and compute from the RACING API, I would like plumbed in.}